variant: flatcar
version: 1.1.0
passwd:
  users:
    - name: core
      password_hash: $1$3xexhKLX$ko7rThERFqzCWGwI7h1m40
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDhFKB7g+NYc5kqzLHE25VdZ6XzB2K/YcGjMOE+p6M/V
storage:
  directories:
    - path: /opt/nomad/scratch
      overwrite: false
      mode: 0755
  files:
    # General
    - path: /etc/hostname
      overwrite: true
      mode: 0600
      contents:
        inline: |
          parasol
    # Mozilla recommended sshd config
    - path: /etc/ssh/sshd_config
      overwrite: true
      mode: 0600
      contents:
        inline: |
          # Supported HostKey algorithms by order of preference.
          HostKey /etc/ssh/ssh_host_ed25519_key
          HostKey /etc/ssh/ssh_host_rsa_key
          HostKey /etc/ssh/ssh_host_ecdsa_key

          KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256

          Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

          MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com

          # Password based logins are disabled - only public key based logins are allowed.
          AuthenticationMethods publickey

          # LogLevel VERBOSE logs user's key fingerprint on login. Needed to have a clear audit track of which key was using to log in.
          LogLevel VERBOSE

          # Log sftp level file access (read/write/etc.) that would not be easily logged otherwise.
          Subsystem sftp  /usr/lib/ssh/sftp-server -f AUTHPRIV -l INFO

          # Root login is not allowed for auditing reasons. This is because it's difficult to track which process belongs to which root user:
          #
          # On Linux, user sessions are tracking using a kernel-side session id, however, this session id is not recorded by OpenSSH.
          # Additionally, only tools such as systemd and auditd record the process session id.
          # On other OSes, the user session id is not necessarily recorded at all kernel-side.
          # Using regular users in combination with /bin/su or /usr/bin/sudo ensure a clear audit track.
          PermitRootLogin No
    # Nomad
    - path: /opt/bin/nomad_1.5.6_linux_amd64.zip
      contents:
        source: https://releases.hashicorp.com/nomad/1.5.6/nomad_1.5.6_linux_amd64.zip
      mode: 0755
    - path: /etc/nomad.d/nomad.hcl
      contents:
        inline: |
          datacenter = "dc1"
          data_dir   = "/opt/nomad/data"

          server {
            enabled          = true
            bootstrap_expect = 1
          }

          client {
            enabled = true
            host_volume "scratch" {
              path      = "/opt/nomad/scratch"
              read_only = false
            }
          }
      mode: 0755
    # Nomad
    - path: /opt/waypoint_0.11.1_linux_amd64.zip
      contents:
        source: https://releases.hashicorp.com/waypoint/0.11.1/waypoint_0.11.1_linux_amd64.zip
      mode: 0755
systemd:
  units:
    - name: "extract-nomad.service"
      enabled: true
      contents: |
        [Unit]
        Description=Unpack Nomad binary to /opt/bin
        ConditionPathExists=!/opt/bin/nomad

        [Service]
        Type=oneshot
        Restart=on-failure
        RemainAfterExit=yes
        ExecStart=/usr/bin/unzip "/opt/bin/nomad_1.5.6_linux_amd64.zip" -d /opt/bin
        ExecStart=/usr/bin/rm "/opt/bin/nomad_1.5.6_linux_amd64.zip"

        [Install]
        WantedBy=multi-user.target
    - name: "nomad.service"
      enabled: true
      contents: |
        [Unit]
        Description=Nomad
        Documentation=https://www.nomadproject.io/docs/
        After=network-online.target extract-nomad.service
        Wants=network-online.target
        Requires=extract-nomad.service

        [Service]
        User=root
        KillMode=process
        KillSignal=SIGINT
        LimitNOFILE=65536
        LimitNPROC=infinity
        Restart=on-failure
        RestartSec=2
        TasksMax=infinity
        OOMScoreAdjust=-1000
        ExecReload=/bin/kill -HUP $MAINPID
        ExecStartPre=/opt/bin/nomad config validate /etc/nomad.d/
        ExecStart=/opt/bin/nomad agent -config /etc/nomad.d

        [Install]
        WantedBy=multi-user.target
    - name: "extract-waypoint.service"
      enabled: true
      contents: |
        [Unit]
        Description=Unpack Waypoint binary to /opt/bin
        ConditionPathExists=!/opt/bin/waypoint

        [Service]
        Type=oneshot
        User=root
        Restart=on-failure
        RemainAfterExit=yes
        ExecStart=/usr/bin/unzip "/opt/waypoint_0.11.1_linux_amd64.zip" -d /opt/bin
        ExecStart=/usr/bin/rm "/opt/waypoint_0.11.1_linux_amd64.zip"

        [Install]
        WantedBy=multi-user.target
    - name: "install-waypoint.service"
      enabled: true
      contents: |
        [Unit]
        Description=Install Waypoint
        After=network-online.target nomad.service
        Wants=network-online.target
        Requires=nomad.service

        [Service]
        Type=oneshot
        User=root
        Restart=on-failure
        RemainAfterExit=yes
        StartLimitBurst=100
        ExecStart=/opt/bin/waypoint context create -server-addr=api.hashicorp.cloud:443 -server-auth-token=$(cat hcp-auth-token) -server-require-auth=true -server-platform="hcp" -set-default hcp-common-parasol
        ExecStart=/opt/bin/waypoint runner install -platform=nomad -server-addr=api.hashicorp.cloud:443 -nomad-runner-image=hashicorp/waypoint -nomad-host-volume=scratch

        [Install]
        WantedBy=multi-user.target
